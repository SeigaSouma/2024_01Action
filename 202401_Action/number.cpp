//=============================================================================
// 
//  数字処理 [number.cpp]
//  Author : 相馬靜雅
// 
//=============================================================================
#include "number.h"

// 派生先
#include "number_2D.h"
#include "number_3D.h"
#include "number_Billboard.h"

//==========================================================================
// マクロ定義
//==========================================================================

//==========================================================================
// 静的メンバ変数宣言
//==========================================================================

//==========================================================================
// コンストラクタ
//==========================================================================
CNumber::CNumber(int nPriority)
{
	// 値のクリア
	m_objType = OBJECTTYPE_2D;	// オブジェクトの種類
}

//==========================================================================
// デストラクタ
//==========================================================================
CNumber::~CNumber()
{

}

//==========================================================================
// 生成処理
//==========================================================================
CNumber *CNumber::Create(EObjectType objtype, int nPriority)
{
	// 生成用のオブジェクト
	CNumber *pNumber = nullptr;

	if (pNumber == nullptr)
	{// nullptrだったら

	 // メモリの確保
		switch (objtype)
		{
		case CNumber::OBJECTTYPE_2D:
			pNumber = DEBUG_NEW CNumber2D;
			break;

		case CNumber::OBJECTTYPE_3D:
			pNumber = DEBUG_NEW CNumber3D(nPriority);
			break;

		case CNumber::OBJECTTYPE_BILLBOARD:
			pNumber = DEBUG_NEW CNumberBillboard;
			break;

		default:
			return nullptr;
			break;
		}

		if (pNumber != nullptr)
		{// メモリの確保が出来ていたら

		 // オブジェクトの種類
			pNumber->m_objType = objtype;

			// 初期化処理
			pNumber->Init(nPriority);
		}
		else
		{
			delete pNumber;
			pNumber = nullptr;
		}

		return pNumber;
	}

	return nullptr;
}

//==========================================================================
// 位置設定
//==========================================================================
void CNumber::SetPosition(const MyLib::Vector3 pos)
{
}

//==========================================================================
// 位置取得
//==========================================================================
MyLib::Vector3 CNumber::GetPosition() const
{
	return mylib_const::DEFAULT_VECTOR3;
}

//==========================================================================
// 移動量設定
//==========================================================================
void CNumber::SetMove(const MyLib::Vector3 move)
{
}

//==========================================================================
// 移動量取得
//==========================================================================
MyLib::Vector3 CNumber::GetMove() const
{
	return mylib_const::DEFAULT_VECTOR3;
}

//==========================================================================
// 向き設定
//==========================================================================
void CNumber::SetRotation(const MyLib::Vector3 rot)
{
}

//==========================================================================
// 向き取得
//==========================================================================
MyLib::Vector3 CNumber::GetRotation() const
{
	return mylib_const::DEFAULT_VECTOR3;
}

//==========================================================================
// 色設定
//==========================================================================
void CNumber::SetColor(const D3DXCOLOR col)
{
}

//==========================================================================
// 色取得
//==========================================================================
D3DXCOLOR CNumber::GetColor() const
{
	return mylib_const::DEFAULT_COLOR;
}

//==========================================================================
// サイズ設定
//==========================================================================
void CNumber::SetSize(const D3DXVECTOR2 size)
{
}

//==========================================================================
// サイズ取得
//==========================================================================
D3DXVECTOR2 CNumber::GetSize() const
{
	return D3DXVECTOR2(0.0f, 0.0f);
}

//==========================================================================
// 元のサイズの設定
//==========================================================================
void CNumber::SetSizeOrigin(const D3DXVECTOR2 size)
{
}

//==========================================================================
// 元のサイズの取得
//==========================================================================
D3DXVECTOR2 CNumber::GetSizeOrigin() const
{
	return D3DXVECTOR2(0.0f, 0.0f);
}

//==========================================================================
// サイズ設定
//==========================================================================
void CNumber::SetSize3D(const MyLib::Vector3 size)
{
}

//==========================================================================
// サイズ取得
//==========================================================================
MyLib::Vector3 CNumber::GetSize3D() const
{
	return MyLib::Vector3(0.0f, 0.0f, 0.0f);
}

//==========================================================================
// テクスチャ座標設定
//==========================================================================
void CNumber::SetTex(D3DXVECTOR2 *tex)
{
}

//==========================================================================
// テクスチャ座標取得
//==========================================================================
D3DXVECTOR2 *CNumber::GetTex()
{
	return nullptr;
}

//==========================================================================
// オブジェクト2Dオブジェクトの取得
//==========================================================================
CObject2D *CNumber::GetObject2D()
{
	return nullptr;
}

//==========================================================================
// オブジェクト2Dオブジェクトの取得
//==========================================================================
CObject3D *CNumber::GetObject3D()
{
	return nullptr;
}

//==========================================================================
// オブジェクトビルボードオブジェクトの取得
//==========================================================================
CObjectBillboard *CNumber::GetObjectBillboard()
{
	return nullptr;
}